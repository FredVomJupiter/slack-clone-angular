{
    "sourceFile": "src/app/components/auth/sign-up/sign-up.component.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1685864606346,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1685864888131,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,17 +9,16 @@\n   styleUrls: ['./sign-up.component.scss']\n })\n export class SignUpComponent {\n   form!: FormGroup;\n-  \n+\n   constructor(\n     private authService: AuthService,\n     private snackBar: MatSnackBar\n   ) {\n     \n   }\n \n-  \n   register() {\n     this.authService.signUp(\n       this.form.value.email,\n       this.form.value.password\n"
                },
                {
                    "date": 1685867388089,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,30 +1,41 @@\n-import { Component } from '@angular/core';\n-import { FormGroup } from '@angular/forms';\n+import { Component, OnInit } from '@angular/core';\n+import { FormGroup, FormBuilder, Validators } from '@angular/forms';\n import { MatSnackBar } from '@angular/material/snack-bar';\n+import { Router } from '@angular/router';\n import { AuthService } from 'src/app/shared/services/auth.service';\n \n @Component({\n   selector: 'app-sign-up',\n   templateUrl: './sign-up.component.html',\n   styleUrls: ['./sign-up.component.scss']\n })\n-export class SignUpComponent {\n+export class SignUpComponent implements OnInit {\n   form!: FormGroup;\n \n   constructor(\n     private authService: AuthService,\n-    private snackBar: MatSnackBar\n+    private snackBar: MatSnackBar,\n+    private formBuilder: FormBuilder,\n+    private router: Router\n   ) {\n     \n   }\n \n+  ngOnInit(): void {\n+      this.form = this.formBuilder.group({\n+      email: ['', [Validators.required, Validators.email]],\n+      password: ['', [Validators.required]]\n+      })\n+  }\n+\n   register() {\n     this.authService.signUp(\n       this.form.value.email,\n       this.form.value.password\n     ).subscribe({\n       next: () => {\n+        this.router.navigate(['']);\n         this.snackBar.open(\"Account created! You can log in now.\", \"OK\", {\n           duration: 5000\n         })\n       },\n"
                },
                {
                    "date": 1685867434543,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,8 +10,11 @@\n   styleUrls: ['./sign-up.component.scss']\n })\n export class SignUpComponent implements OnInit {\n   form!: FormGroup;\n+  isPasswordVisible: boolean = false;\n+  visibiltyIcon: string = 'visibility';\n+  minLengthPassword: number = 5;\n \n   constructor(\n     private authService: AuthService,\n     private snackBar: MatSnackBar,\n@@ -46,5 +49,11 @@\n       }\n     })\n   }\n \n+  togglePwVisibility(passwordInput: HTMLInputElement) {\n+    this.isPasswordVisible = !this.isPasswordVisible;\n+    passwordInput.type = this.isPasswordVisible ? 'text' : 'password';\n+    this.visibiltyIcon = this.isPasswordVisible ? 'visibility_off' : 'visibility';\n+  }\n+\n }\n"
                }
            ],
            "date": 1685864606346,
            "name": "Commit-0",
            "content": "import { Component } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { AuthService } from 'src/app/shared/services/auth.service';\n\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.scss']\n})\nexport class SignUpComponent {\n  form!: FormGroup;\n  \n  constructor(\n    private authService: AuthService,\n    private snackBar: MatSnackBar\n  ) {\n    \n  }\n\n  \n  register() {\n    this.authService.signUp(\n      this.form.value.email,\n      this.form.value.password\n    ).subscribe({\n      next: () => {\n        this.snackBar.open(\"Account created! You can log in now.\", \"OK\", {\n          duration: 5000\n        })\n      },\n      error: error => {\n        this.snackBar.open(error.message, \"OK\", {\n          duration: 5000\n        })\n      }\n    })\n  }\n\n}\n"
        }
    ]
}